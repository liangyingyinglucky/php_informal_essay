设计模式：

1 单例模式：
私有的实例化变量
私有的构造函数 析构函数 克隆函数
公共的实例化方法

2 抽象工厂模式：在不指定具体类的情况下创建一系列相关或依赖对象。 通常创建的类都实现相同的接口。 抽象工厂的客户并不关心这些对象是如何创建的，它只是知道它们是如何一起运行的。
3 建造者模式：建造者是创建一个复杂对象的一部分接口
4 工厂方法模式：将其子类用不同的方法来创建一个对象，实现了依赖倒置
5 多例模式：一个类有多个相同的实例，该实例都是自己本身，多例类必须自己创建，管理自己的实例，并向外界提供自己的实例
6 对象池模式：提供已经初始化了的对象池
7 原型模式：创建一个原型，然后克隆他会更节省开销
8 简单工厂模式：可以有多个不同参数的工厂


