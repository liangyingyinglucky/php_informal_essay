进程process和线程Thread的关系与区别：

CPU是工厂；进程相当于工厂的车间，一个工厂可以有很多个车间；线程相当于车间里面的工人，一个车间可以有很多人工人；

一个CPU只能执行一个任务
一个进程可以有多个线程

进程的内存空间是共享的，但是内存空间大小不一定，有些内存空间被一个线程占用了，其他的线程只能等待；
如何防止多个线程读取同一块内存空间呢： （1）互斥锁  （2）信号量

多进程：多个任务同时执行
多线程：单个任务分成不同的部分执行
一个线程崩溃则整个进程崩溃
线程不能单独执行，必须存在于进程中


进程（资源所有权 + 调度执行 ）：
一段可以执行的程序
程序所需要的相关数据
程序的执行上下文

标识符：进程ID
状态：进行目前所处的状态
优先级：
内存指针：进程相关数据指针，和其他进程共享内存块的指针
上下文数据：进程执行时处理器的寄存器中的数据
i/o状态信息：
记账信息：

进程控制结构：属性的集合叫进程控制块
程序、数据、栈、属性的集合叫进程映像

执行上下文 == 进程状态 ： 操作系统用来管理和控制进程所需的内部数据
上下文切换（进程调度）：CPU资源从一个进程分配给另外一个进程
非抢占式 和  抢占式


线程：
线程状态
一个执行栈
私有的数据区：局部变量的静态存储空间
寄存器集：处理器的一些状态

并发：一个处理器同时处理多个任务
并行：多个处理器同时处理多个任务


php-fpm 多进程模式

多进程：内存释放简单，容灾能力强
多线程：信息共享和通信方便

线程：需要频繁创建和销毁的
     需要进行大量计算的
     强相关的业务处理
     多核分布

实现多进程：pcntl_fork()
          pcntl_wait（）等待子进程中断

进程间通信：
管道
信号量
消息队列
信号
共享内存
套接字

进程的状态：
等待
就绪
运行



























