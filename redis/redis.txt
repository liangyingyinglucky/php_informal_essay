1 与memcache的区别
memcache是实现php语言 对内存 进行操作的中间介质
端口号：11211
在PHP中使用就是一个类，类提供的方法都可以用
key的长度最大是250
membcache的分布式部署
缓存失效后懒惰方式删除
缓存空间耗尽后会删除最近不常使用的key来得到空间
区别：
redis分布式：主从模式

memcache分布式：把key平均分配到各个服务器，addServer(主机名，端口);

注意：key的设置和读取的多个memcache的加载顺序要保持一致

分布式类型：① 一台服务器多个服务、② 多台服务器多个服务

redis: 可以存储稍微复杂的数据(list、set、sortset、hash)用于集合计算

memcache: 支持领域比较多(win系统和linux系统都可以使用、各种框架支持使用、允许把session信息存入memcache中)一般存储的信息比较简单，例如字符串型信息，就可以使用memcache


2 Redis的数据类型
    string 一个键值最大512
    hash 键值对的集合，适合存对象
    list 字符串列表，按插入顺序排序
    集合 sadd 字符串的无序集合，不能重复
    有序集合 zadd 字符串的有序集合，不能重复 每个元素都要指定一个分数，根据分数来进行排序


3 Redis的淘汰策略
    已设置过期时间中选最近最少使用
    已设置过期时间中选将要过期的
    已设置过期时间中随机找一个

    从数据集中选最近最少使用
    从数据集中随意选

    禁止驱逐


5 缓存穿透
    预加载   锁

    缓存穿透：缓存和数据库中都没有的数据，而用户不断发起请求增加数据库压力，击垮数据库
    缓存击穿：在一个热点key上，对于这个热点key失效的瞬间，持续的大并发穿破缓存
    缓存雪崩：大面积缓存失效

    解决方案：
    缓存穿透：接口数据校验，布隆过滤器
    缓存击穿：热点数据永不过期，或者加上互斥锁

    一般避免以上情况发生我们从三个时间段去分析下：

    缓存雪崩：
    事前：Redis 高可用，主从+哨兵，Redis cluster，避免全盘崩溃。
    事中：本地 ehcache 缓存 + Hystrix 限流+降级，避免** MySQL** 被打死。
    事后：Redis 持久化 RDB+AOF，一旦重启，自动从磁盘上加载数据，快速恢复缓存数据。





















